<Window x:Class="PL.DroneInActionView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:PL"
        mc:Ignorable="d"
        Title="DroneInActionView" Height="700" Width="1000" Loaded="Window_Loaded">

    <Grid>
        <Grid 
            Name="ShowDrone" 
            Visibility="Visible" Margin="0,0,10,0">

            <Grid 
                x:Name="UpdateGrid" 
                Visibility="Visible" 
                VerticalAlignment="Top" 
                Margin="38,65,0,0" 
                HorizontalAlignment="Left" Height="609" Width="267">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label 
                    
                    VerticalAlignment="Center" 
                    Grid.Row="0" 
                    Margin="3" 
                    HorizontalAlignment="Left" 
                    Grid.Column="0" 
                    Content="Battery Status:"/>
                <TextBox 
                    x:Name="batteryStatusTextBox" 
                    Width="120" 
                    VerticalAlignment="Center" 
                    Text="{Binding Battery, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                    Grid.Row="0" 
                    Margin="3" 
                    Height="23" 
                    HorizontalAlignment="Left" 
                    Grid.Column="1" 
                    IsEnabled="False"/>
                <Label 
                    VerticalAlignment="Center" 
                    Grid.Row="1" 
                    Margin="3" 
                    HorizontalAlignment="Left" 
                    Grid.Column="0" 
                    Content="Id:"/>
                <TextBox 
                    x:Name="idTextBox" 
                    Width="120" 
                    VerticalAlignment="Center" 
                    Text="{Binding Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                    Grid.Row="1" 
                    Margin="3" 
                    Height="23" 
                    HorizontalAlignment="Left" 
                    Grid.Column="1" 
                    IsEnabled="False"/>
                <Label 
                    VerticalAlignment="Center" 
                    Grid.Row="3" 
                    Margin="3" 
                    HorizontalAlignment="Left" 
                    Grid.Column="0" 
                    Content="Drone Model:"/>
                <TextBox 
                    x:Name="droneModelTextBox" 
                    Width="120" 
                    VerticalAlignment="Center"  
                    Text="{Binding Model, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  
                    Grid.Row="3" 
                    Margin="3" 
                    Height="23" 
                    HorizontalAlignment="Left" 
                    Grid.Column="1"/>
                <Label 
                    VerticalAlignment="Center" 
                    Grid.Row="4" 
                    Margin="3" 
                    HorizontalAlignment="Left" 
                    Grid.Column="0" 
                    Content="Drone Status:"/>
                <TextBox 
                    x:Name="droneStatusTxtBox" 
                    Width="120" 
                    VerticalAlignment="Center" 
                    Text="{Binding DroneStatuses, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                    Grid.Row="4" 
                    Margin="3"  
                    Height="Auto" 
                    HorizontalAlignment="Left" 
                    Grid.Column="1" 
                    IsEnabled="False"/>
                <Label 
                    VerticalAlignment="Center" 
                    Grid.Row="5" 
                    Margin="3" 
                    HorizontalAlignment="Left" 
                    Grid.Column="0" 
                    Content="Weight Category:"/>
                <TextBox 
                    x:Name="droneWeightTxtBox" 
                    Grid.Column="1" 
                    HorizontalAlignment="Left" 
                    Margin="3,0,0,0" 
                    Text="{Binding Weight, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                    Grid.Row="5" 
                    VerticalAlignment="Center" 
                    Width="120" 
                    IsEnabled="False"/>
                <Label 
                    VerticalAlignment="Center" 
                    Grid.Row="6" 
                    Margin="3" 
                    HorizontalAlignment="Left" 
                    Grid.Column="0" 
                    Content="Latitude:"/>
                <TextBox 
                    x:Name="latitudeTextBox" 
                    Width="120" 
                    VerticalAlignment="Center" 
                    Text="{Binding Location.Latitude, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                    Grid.Row="6" 
                    Margin="3" 
                    Height="23" 
                    HorizontalAlignment="Left" 
                    Grid.Column="1" 
                    IsEnabled="False"/>
                <Label 
                    Content="Longitude:"
                    VerticalAlignment="Center" 
                    Grid.Row="7" 
                    Margin="3" 
                    HorizontalAlignment="Left" 
                    Grid.Column="0"/>
                <TextBox 
                    x:Name="longitudeTextBox" 
                    Width="120" 
                    VerticalAlignment="Center" 
                    Text="{Binding Location.Longitude, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                    Grid.Row="7" 
                    Margin="3" 
                    Height="23" 
                    HorizontalAlignment="Left" 
                    Grid.Column="1" 
                    IsEnabled="False"/>
                <Label Content="Parcel In Transfer:" RenderTransformOrigin="0.596,8.757" Height="30" Margin="3,0,-28,-32" VerticalAlignment="Bottom" Grid.Row="11" Grid.ColumnSpan="2" FontWeight="Bold" Background="White"/>
                <Label Content="Parcels id:"  RenderTransformOrigin="0.800,9.757" Grid.ColumnSpan="2" Height="30" Margin="3,0,132,-62" VerticalAlignment="Bottom" Grid.Row="11"/>
                <TextBox x:Name="parcelIdTextBox" 
                         Width="120"
                         VerticalAlignment="Center" 
                         Text="{Binding ParcelInTransfer.id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                         Grid.Row="7"
                         Grid.Column="1"
                         TextWrapping="Wrap"
                         Margin="3,62,3,-62" />
                <Label Content=" Weight:" RenderTransformOrigin="0.800,9.757" Height="30" Margin="-5,0,18,-94" VerticalAlignment="Bottom" Grid.Row="11"/>
                <TextBox Text="{Binding ParcelInTransfer.Weight, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" TextWrapping="Wrap" TextChanged="TextBox_TextChanged" Margin="3,64,-2,-84" Grid.Row="11" Grid.Column="1"/>
                <Label Content="Priority" Margin="0,99,134,-129" Grid.Row="11" Grid.ColumnSpan="2"/>
                <Label Content="Supply Target&#xD;&#xA; longtitud:" Margin="0,262,6,-292" Grid.Row="11"/>
                <TextBox 
                    x:Name="suplyTargetLongtitud"
                    Text="{Binding drone.ParcelInTransfer.SupplyTargetLocation.Longitude, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                   TextWrapping="Wrap" Width="120" Grid.Column="1" Margin="8,282,-2,-302" Grid.Row="11"/>

            </Grid>

            <Button 
                x:Name="btnDroneToDelivery" 
                Content="Drone to delivery" 
                Style="{StaticResource MaterialDesignRaisedDarkButton}"
                materialDesign:ButtonAssist.CornerRadius="25"
                HorizontalAlignment="Center" 
                Margin="0,182,0,0" 
                VerticalAlignment="Top" 
                Width="182" 
                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Click="btnDroneToDelivery_Click" Height="60" />
            <Button 
                x:Name="btnUpdateDrone" 
                Content="Update drone" 
                Style="{StaticResource MaterialDesignRaisedDarkButton}"
                materialDesign:ButtonAssist.CornerRadius="25"
                HorizontalAlignment="Center" 
                Margin="0,26,0,0" 
                VerticalAlignment="Top" 
                Height="60" 
                Width="180" 
                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Click="btnUpdateDrone_Click"/>
            <Button 
                x:Name="btnDroneToCharge"  
                Content="Sending to charging" 
                Style="{StaticResource MaterialDesignRaisedDarkButton}"
                materialDesign:ButtonAssist.CornerRadius="25"
                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                HorizontalAlignment="Center" 
                Margin="0,104,0,0" 
                VerticalAlignment="Top" 
                Height="60" Width="180" 
                Click="btnDroneToCharge_Click"/>
            <Button 
                x:Name="btnCollectParcel" 
                Content="Parcel collection" 
                Style="{StaticResource MaterialDesignRaisedDarkButton}"
                materialDesign:ButtonAssist.CornerRadius="25"
                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                HorizontalAlignment="Center" 
                Margin="0,104,0,0" 
                VerticalAlignment="Top" 
                Height="60" 
                Width="181" 
                Click="btnCollectParcel_Click"/>
            <Button 
                x:Name="btnReleaiseToCharge" 
                Content="Releaizse frome charge" 
                Style="{StaticResource MaterialDesignRaisedDarkButton}"
                materialDesign:ButtonAssist.CornerRadius="25"
                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                HorizontalAlignment="Center" 
                Margin="0,104,0,0" 
                VerticalAlignment="Top" 
                Width="180" 
                Height="60" 
                Click="btnReleaiseToCharge_Click"/>
            <Button 
                x:Name="btnParcelDelivery" 
                Content="Parcel delivery"
                Style="{StaticResource MaterialDesignRaisedDarkButton}"
                materialDesign:ButtonAssist.CornerRadius="25"
                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                HorizontalAlignment="Center" 
                Margin="0,104,0,0" 
                VerticalAlignment="Top" 
                Height="60" 
                Width="180" 
                Click="btnParcelDelivery_Click"/>
            <Button 
                x:Name="btnClose" 
                Content="Close" 
                Background="#da2d2d"
                Style="{StaticResource MaterialDesignRaisedDarkButton}"
                materialDesign:ButtonAssist.CornerRadius="25"
                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                Click="closeButton_Click"  
                HorizontalAlignment="Left" 
                VerticalAlignment="Top" 
                Width="108" Margin="840,618,0,0" />

            <TextBox Text="{Binding ParcelInTransfer.Priority, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                     x:Name="priorityTextBox"
                     TextWrapping="Wrap" Margin="154,375,712,279"/>
            <Label Content="Parcel status:" Margin="38,409,868,247"/>
            <TextBox 
                x:Name="statusTextBox"
                Text="{Binding ParcelInTransfer.ParcelTransferStatus, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" 
                     TextWrapping="Wrap" Margin="154,410,712,241"/>
            <Label Content="Supply Target&#xD;&#xA; latitude" Margin="38,467,818,158"/>
            <TextBox Text="{Binding  ParcelInTransfer.SupplyTargetLocation.Latitude, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"  TextWrapping="Wrap" Margin="154,480,712,171"/>
            <Label Content="Collecting &#xD;&#xA;Latitude:" Margin="310,467,550,171"/>
            <TextBox 
                x:Name="collectionLatitudTextBox"
                Text="{Binding ParcelInTransfer.CollectingLocation.Latitude, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                TextWrapping="Wrap" Width="120" Margin="440,480,430,175"/>
            <Label Content="Collecting &#xD;&#xA;Longitude" Margin="310,541,530,69"/>
            <TextBox 
                x:Name="collctingLocationTextBox"
                 Text="{Binding  drone.ParcelInTransfer.CollectingLocation.Longitude, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                TextWrapping="Wrap" Width="120" Margin="445,541,425,106"/>
            <Label Content="Resiver name:" Margin="310,324,558,324"/>
            <TextBox
                x:Name="ReciverNameTextBox"
                
                Text="{Binding  ParcelInTransfer.Reciver.Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                TextWrapping="Wrap" Margin="432,306,425,342"/>
            <Label Content="Reciver id:" Margin="310,358,566,290"/>
            <TextBox
                x:Name="ReciverIdTextBox"
                Text="{Binding  ParcelInTransfer.Reciver.Name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                TextWrapping="Wrap" Width="120" Margin="435,358,435,302"/>
            <Label Content="Sender name:" Margin="310,382,545,256"/>
            <TextBox
                x:Name="SenderNameTextBox"
                Text="{Binding  ParcelInTransfer.Sender.Name, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                TextWrapping="Wrap" Width="120" Margin="435,387,435,268"/>
            <Label Content="Sender id:" Margin="308,421,556,227"/>
            <TextBox
                x:Name="SenderIdTextBox"
                 Text="{Binding  ParcelInTransfer.Sender.Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                TextWrapping="Wrap" Width="120" Margin="435,434,435,227"/>
            <Label Content="Distance:" Margin="604,556,283,106"/>
            <TextBox 
                x:Name="DistanceTextBox"
               Text="{Binding ParcelInTransfer.TransportDistance, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"
                TextWrapping="Wrap" Width="120" Margin="707,548,163,98"/>




        </Grid>


        <Grid x:Name="AddGrid" Visibility="Collapsed" VerticalAlignment="Top" Margin="86,36,0,0" HorizontalAlignment="Left" Height="254">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Label Content="Id:" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Margin="3" HorizontalAlignment="Left"/>
            <TextBox x:Name="idTextBox1" Grid.Row="0" Grid.Column="1" Width="120" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3" Height="23" 
                     Text="{Binding Id, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>

            <Label Content="Drone Model:" Grid.Row="1" Grid.Column="0" Margin="3"  VerticalAlignment="Center" HorizontalAlignment="Left" />
            <TextBox x:Name="droneModelTextBox1" Grid.Row="1" Grid.Column="1" Width="120" VerticalAlignment="Center" Margin="3" Height="23" HorizontalAlignment="Left"/>

            <Label VerticalAlignment="Center" Grid.Row="2" Grid.Column="0" Margin="3" HorizontalAlignment="Left" Content="Battery Precent:"/>
            <TextBox x:Name="batteryPrecentTextBox" Grid.Row="2"  Grid.Column="1" Width="120" VerticalAlignment="Center" Margin="3" Height="23" HorizontalAlignment="Left"
                     Text="{Binding Battery, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" />

            <Label VerticalAlignment="Center" Grid.Row="4" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Drone Status:"/>

            <ComboBox x:Name="droneStatusComboBox" Grid.Column="1" Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3" Height="Auto" 
                      Text="{Binding DroneStatuses, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="120" />
            <Label VerticalAlignment="Center" Grid.Row="5" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Weight Category:"/>

            <ComboBox x:Name="droneWeightComboBox" Grid.Column="1" Grid.Row="5" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,0,0,0" 
                      Text="{Binding Weight, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Width="120"/>
            <Label VerticalAlignment="Center" Grid.Row="6" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Latitude:"/>

            <TextBox x:Name="latitudeTextBox1" Width="120" VerticalAlignment="Bottom" Text="{Binding Location.Latitude, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="6" Margin="0,0,0,5" Height="23" HorizontalAlignment="Center" Grid.Column="1"/>
            <Label VerticalAlignment="Center" Grid.Row="7" Margin="3" HorizontalAlignment="Left" Grid.Column="0" Content="Longitude:"/>

            <TextBox x:Name="longitudeTextBox1" Width="120" VerticalAlignment="Center" Text="{Binding Location.Longitude, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" Grid.Row="7" Margin="3" Height="23" HorizontalAlignment="Left" Grid.Column="1" UndoLimit="99"/>

            <Label Content="Station for charge:" HorizontalAlignment="Left" Margin="3" Grid.Row="8" VerticalAlignment="Top"/>
            <ComboBox x:Name="stationsComboBox" Grid.Column="1" Grid.Row="8" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="3" Width="120"
                      Text="{Binding Stations, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>


        </Grid>
    </Grid>

</Window>